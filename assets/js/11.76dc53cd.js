(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{381:function(s,e,a){"use strict";a.r(e);var n=a(28),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" docker")]),s._v(" "),a("h2",{attrs:{id:"docker的启动、停止、重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker的启动、停止、重启"}},[s._v("#")]),s._v(" docker的启动、停止、重启")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# service docker restart\nRedirecting to /bin/systemctl restart docker.service\n[root@localhost ~]# service docker stop\nRedirecting to /bin/systemctl stop docker.service\n[root@localhost ~]# service docker start\nRedirecting to /bin/systemctl start docker.service\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"docker创建一个容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker创建一个容器"}},[s._v("#")]),s._v(" docker创建一个容器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# docker run -it -v /docker_test:/yufei  --name yufei_6 centos\n# -i：允许我们对容器内的 (STDIN) 进行交互\n# -t：在新容器内指定一个伪终端或终端\n# -v：是挂在宿机目录，/docker_test是宿机目录，/yufei是当前docker容器的目录，宿机目录必须是绝对的。\n# --name：是给容器起一个名字，可省略，省略的话docker会随机产生一个名字\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"docker启动的容器列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker启动的容器列表"}},[s._v("#")]),s._v(" docker启动的容器列表")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[root@localhost ~]# docker ps -a\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                        PORTS               NAMES\n724e7701f0d4        centos              "/bin/bash"         5 minutes ago       Up 5 minutes                                      yufei_6\nf9097691663e        centos              "/bin/bash"         6 minutes ago       Up 6 minutes                                      yufei_5\ne59a540fb979        centos              "/bin/base"         6 minutes ago       Created                                           yufei_4\nff49dfedea4f        centos              "/bin/bash"         2 hours ago         Exited (137) 10 minutes ago                       yufei_03\nd2cc70abb5a5        centos              "/bin/bash"         2 hours ago         Exited (127) 2 hours ago                          yufei_02\n2d48fc5b7c17        centos              "/bin/bash"         2 hours ago         Exited (127) 2 hours ago \n# docker ps 默认列表是正在启动的容器 -a是显示所有创建的容器\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"启动、停止、重启某个docker-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动、停止、重启某个docker-容器"}},[s._v("#")]),s._v(" 启动、停止、重启某个docker 容器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# docker start yufei_01\nyufei_01\n[root@localhost ~]# docker stop yufei_01\nyufei_01\n[root@localhost ~]# docker restart yufei_01\nyufei_01\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"查看指定容器的日志记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看指定容器的日志记录"}},[s._v("#")]),s._v(" 查看指定容器的日志记录")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# docker logs -f yufei_01\n[root@2d48fc5b7c17 /]# ls\nanaconda-post.log  bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n[root@2d48fc5b7c17 /]# exit\nexit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"删除某个容器-若正在运行-需要先停止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除某个容器-若正在运行-需要先停止"}},[s._v("#")]),s._v(" 删除某个容器，若正在运行，需要先停止")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# docker rm yufei_01\nError response from daemon: You cannot remove a running container 2d48fc5b7c17b01e6247cbc012013306faf1e54f24651d5e16d6db4e15f92d33. Stop the container before attempting removal or use -f\n[root@localhost ~]# docker stop yufei_01\nyufei_01\n[root@localhost ~]# docker rm yufei_01\nyufei_01\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"删除所有容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除所有容器"}},[s._v("#")]),s._v(" 删除所有容器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@localhost ~]# docker rm $(docker ps -a -q)\nError response from daemon: You cannot remove a running container 724e7701f0d4a830167e21f75b470235a0e408fd6cc2913403426e96f69cba11. Stop the container before attempting removal or use -f\nError response from daemon: You cannot remove a running container f9097691663ee36f9d2ee56afbdcca0eeb8b63e5590ddf18c0c42954c93b9f06. Stop the container before attempting removal or use -f\n[root@localhost ~]# \n[root@localhost ~]# \n[root@localhost ~]# docker stop yufei_6\nyufei_6\n[root@localhost ~]# docker stop yufei_5\nyufei_5\n[root@localhost ~]# docker rm $(docker ps -a -q)\n724e7701f0d4\nf9097691663e\n[root@localhost ~]# \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("1、下面以定制一个 nginx 镜像（构建好的镜像内会有一个 /usr/share/nginx/html/index.html 文件）")]),s._v(" "),a("p",[s._v("在一个空目录下，新建一个名为 Dockerfile 文件，并在文件内添加以下内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FROM nginx\nRUN echo '这是一个本地构建的nginx镜像' > /usr/share/nginx/html/index.html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("2、FROM 和 RUN 指令的作用")]),s._v(" "),a("p",[s._v("FROM：定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。")]),s._v(" "),a("p",[s._v("RUN：用于执行后面跟着的命令行命令。有以下俩种格式：")]),s._v(" "),a("p",[s._v("shell 格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("RUN <命令行命令>\n# <命令行命令> 等同于，在终端操作的 shell 命令。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("exec 格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('RUN ["可执行文件", "参数1", "参数2"]\n# 例如：\n# RUN ["./test.php", "dev", "offline"] 等价于 RUN ./test.php dev offline\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('FROM centos\nRUN yum install wget\nRUN wget -O redis.tar.gz "http://download.redis.io/releases/redis-5.0.3.tar.gz"\nRUN tar -xvf redis.tar.gz\n以上执行会创建 3 层镜像。可简化为以下格式：\nFROM centos\nRUN yum install wget \\\n    && wget -O redis.tar.gz "http://download.redis.io/releases/redis-5.0.3.tar.gz" \\\n    && tar -xvf redis.tar.gz\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("如上，以 && 符号连接命令，这样执行后，只会创建 1 层镜像。")]),s._v(" "),a("h2",{attrs:{id:"开始构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始构建镜像"}},[s._v("#")]),s._v(" 开始构建镜像")]),s._v(" "),a("p",[s._v("在 Dockerfile 文件的存放目录下，执行构建动作。")]),s._v(" "),a("p",[s._v("以下示例，通过目录下的 Dockerfile 构建一个 nginx:test（镜像名称:镜像标签）。")]),s._v(" "),a("p",[s._v("注：最后的 . 代表本次执行的上下文路径，下一节会介绍。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t nginx:test .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/11/172a14b039705603?w=1435&h=578&f=png&s=108679",alt:""}}),s._v("\n以上显示，说明已经构建成功。")]),s._v(" "),a("h3",{attrs:{id:"上下文路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上下文路径"}},[s._v("#")]),s._v(" 上下文路径")]),s._v(" "),a("p",[s._v("上一节中，有提到指令最后一个 . 是上下文路径，那么什么是上下文路径呢？")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t nginx:test .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上下文路径，是指 docker 在构建镜像，有时候想要使用到本机的文件（比如复制），docker build 命令得知这个路径后，会将路径下的所有内容打包。")]),s._v(" "),a("p",[s._v("解析：由于 docker 的运行模式是 C/S。我们本机是 C，docker 引擎是 S。实际的构建过程是在 docker 引擎下完成的，所以这个时候无法用到我们本机的文件。这就需要把我们本机的指定目录下的文件一起打包提供给 docker 引擎使用。")]),s._v(" "),a("p",[s._v("如果未说明最后一个参数，那么默认上下文路径就是 Dockerfile 所在的位置。")]),s._v(" "),a("p",[s._v("注意：上下文路径下不要放无用的文件，因为会一起打包发送给 docker 引擎，如果文件过多会造成过程缓慢。")]),s._v(" "),a("h2",{attrs:{id:"指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令详解"}},[s._v("#")]),s._v(" 指令详解")]),s._v(" "),a("h3",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" COPY")]),s._v(" "),a("p",[s._v("复制指令，从上下文目录中复制文件或者目录到容器里指定路径。")]),s._v(" "),a("p",[s._v("格式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('COPY [--chown=<user>:<group>] <源路径1>...  <目标路径>\nCOPY [--chown=<user>:<group>] ["<源路径1>",...  "<目标路径>"]\n\n[--chown=<user>:<group>]：可选参数，用户改变复制到容器内文件的拥有者和属组。\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("<源路径>：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("COPY hom* /mydir/\nCOPY hom?.txt /mydir/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("<目标路径>：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。")]),s._v(" "),a("h3",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),a("p",[s._v("ADD 指令和 COPY 的使用格式一致（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：")]),s._v(" "),a("p",[s._v("ADD 的优点：在执行 <源文件> 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 <目标路径>。")]),s._v(" "),a("p",[s._v("ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。")]),s._v(" "),a("h3",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),a("p",[s._v("类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:")]),s._v(" "),a("p",[s._v("CMD 在docker run 时运行。\nRUN 是在 docker build。\n作用：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。")]),s._v(" "),a("p",[s._v("注意：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('CMD <shell 命令> \nCMD ["<可执行文件或命令>","<param1>","<param2>",...] \nCMD ["<param1>","<param2>",...]  # 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是sh。")]),s._v(" "),a("h3",{attrs:{id:"entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[s._v("#")]),s._v(" ENTRYPOINT")]),s._v(" "),a("p",[s._v("类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。")]),s._v(" "),a("p",[s._v("但是, 如果运行 docker run 时使用了 --entrypoint 选项，此选项的参数可当作要运行的程序覆盖 ENTRYPOINT 指令指定的程序。")]),s._v(" "),a("p",[s._v("优点：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。")]),s._v(" "),a("p",[s._v("注意：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('ENTRYPOINT ["<executeable>","<param1>","<param2>",...]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以搭配 CMD 命令使用：一般是变参才会使用 CMD ，这里的 CMD 等于是在给 ENTRYPOINT 传参，以下示例会提到。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("假设已通过 Dockerfile 构建了 nginx:test 镜像：\nFROM nginx")]),s._v(" "),a("p",[s._v('ENTRYPOINT ["nginx", "-c"] # 定参\nCMD ["/etc/nginx/nginx.conf"] # 变参')]),s._v(" "),a("p",[s._v("1、不传参运行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run  nginx:test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("容器内会默认运行以下命令，启动主进程。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nginx -c /etc/nginx/nginx.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2、传参运行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run  nginx:test -c /etc/nginx/new.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("容器内会默认运行以下命令，启动主进程(/etc/nginx/new.conf:假设容器内已有此文件)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nginx -c /etc/nginx/new.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" ENV")]),s._v(" "),a("p",[s._v("设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ENV <key> <value>\nENV <key1>=<value1> <key2>=<value2>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('ENV NODE_VERSION 7.2.0\n\nRUN curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \\\n  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("ARG\n构建参数，与 ENV 作用一至。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。")]),s._v(" "),a("p",[s._v("构建命令 docker build 中可以用 --build-arg <参数名>=<值> 来覆盖。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ARG <参数名>[=<默认值>]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("VOLUME\n定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。")]),s._v(" "),a("p",[s._v("作用：")]),s._v(" "),a("p",[s._v("避免重要的数据，因容器重启而丢失，这是非常致命的。\n避免容器不断变大。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('VOLUME ["<路径1>", "<路径2>"...]\nVOLUME <路径>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。")]),s._v(" "),a("p",[s._v("注意点：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_33816611/article/details/93267738?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-2",target:"_blank",rel:"noopener noreferrer"}},[s._v("Dockerfile Volume指令与docker-v的区别"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"expose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[s._v("#")]),s._v(" EXPOSE")]),s._v(" "),a("p",[s._v("仅仅只是声明端口。")]),s._v(" "),a("p",[s._v("作用：")]),s._v(" "),a("p",[s._v("帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。\n在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。\n格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("EXPOSE <端口1> [<端口2>...]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"workdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[s._v("#")]),s._v(" WORKDIR")]),s._v(" "),a("p",[s._v("指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。")]),s._v(" "),a("p",[s._v("docker build 构建镜像过程中的，每一个 RUN 命令都是新建的一层。只有通过 WORKDIR 创建的目录才会一直存在。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("WORKDIR <工作目录路径>\nUSER\n用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("USER <用户名>[:<用户组>]\nHEALTHCHECK\n用于指定某个程序或者指令来监控 docker 容器服务的运行状态。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("HEALTHCHECK [选项] CMD <命令>：设置检查容器健康状况的命令\nHEALTHCHECK NONE：如果基础镜像有健康检查指令，使用这行可以屏蔽掉其健康检查指令\n\nHEALTHCHECK [选项] CMD <命令> : 这边 CMD 后面跟随的命令使用，可以参考 CMD 的用法。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"onbuild"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onbuild"}},[s._v("#")]),s._v(" ONBUILD")]),s._v(" "),a("p",[s._v("用于延迟构建命令的执行。简单的说，就是 Dockerfile 里用 ONBUILD 指定的命令，在本次构建镜像的过程中不会执行（假设镜像为 test-build）。当有新的 Dockerfile 使用了之前构建的镜像 FROM test-build ，这是执行新镜像的 Dockerfile 构建时候，会执行 test-build 的 Dockerfile 里的 ONBUILD 指定的命令。")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ONBUILD <其它指令>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('FROM 3x0m5kkq.mirror.aliyuncs.com/library/nginx:1.19.0-alpine\nCOPY ./dist /usr/share/nginx/html/education/preparelesson-pc-web/\nCOPY nginx.conf /etc/nginx/nginx.conf\nWORKDIR /usr/share/nginx/html/\nEXPOSE 8063\nCMD ["nginx", "-g", "daemon off;"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);