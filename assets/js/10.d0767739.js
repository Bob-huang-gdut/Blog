(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{382:function(n,t,e){"use strict";e.r(t);var v=e(28),r=Object(v.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("基于bug监控系统的可行性研究报告\n1.什么是bug监控系统")]),n._v(" "),e("p",[n._v("bug监控系统是一款监控工具，主要用于监控应用在运行周期内所产生的的缺陷，并记录传到相应的服务器中。开发者可以通过平台收集的信息来快速定位到问题的关键并进行修复。从而提升用户体验。")]),n._v(" "),e("p",[n._v("2.为什么要使用bug监控系统")]),n._v(" "),e("p",[n._v("工程师在开发时一定不止一次要去解决一些顽固的线上问题，也曾想方设法要去复现用户的bug，但由于没有bug监控系统的支持，结果可能都不太理想。怎样定位线上问题，一直以来，都是很头疼的问题，因为它发生于用户的一系列操作之后。错误的原因可能源于机型，网络环境，复杂的操作行为等等，在想要去解决的时候很难复现出来，自然也就无法解决。\n当生产系统中产生了一个bug时，如何快速地得到报警？如何评估它的影响和紧迫性？如何快速地找到问题的根源？当修复完程序后，又如何知道它是否解决了问题？bug监控系统在帮助我们与现有流程集成时解答了这些问题。\n例如，线上有一个bug，代码的某处逻辑的“TypeError: xxx is undefined”造成了这个问题，bug监控系统会立即发现错误，并通过邮件或其他基于通知规则的集成通知到相关责任人员，这个通知可以把我们引入到一个指示板，这个指示板为我们提供了快速分类问题所需的上下文，如：频率、用户影响、代码哪一部分受到影响以及哪个团队可能是问题的所有者。")]),n._v(" "),e("p",[n._v("3.常见的bug监控系统及方案")]),n._v(" "),e("p",[n._v("3.1阿里云实时监控服务ARMS")]),n._v(" "),e("p",[n._v("3.1.1简介")]),n._v(" "),e("p",[n._v("应用实时监控服务ARMS（Application Real-Time Monitoring Service）是一款应用性能管理（APM）产品，包含应用监控、Prometheus监控和前端监控三大子产品，涵盖分布式应用、容器环境、浏览器、小程序、APP等领域的性能管理，能实现全栈式性能监控和端到端全链路追踪诊断。\n3.1.1支持的子产品和功能模块")]),n._v(" "),e("p",[n._v("3.1.1.1应用监控")]),n._v(" "),e("p",[n._v("ARMS应用监控是一款应用性能管理（Application Performance Management，简称 APM）产品。您无需修改代码，只需为应用安装一个探针，ARMS就能够对应用进行全方位监控，帮助您快速定位出错接口和慢接口、重现调用参数、发现系统瓶颈，从而大幅提升线上问题诊断的效率。")]),n._v(" "),e("p",[n._v("3.1.1.2前端监控")]),n._v(" "),e("p",[n._v("ARMS前端监控专注于对Web场景、Weex场景和小程序场景的监控，从页面打开速度（测速）、页面稳定性（JS Error）和外部服务调用成功率（API）这三个方面监测Web和小程序页面的健康度。")]),n._v(" "),e("p",[n._v("3.1.1.3 Prometheus监控")]),n._v(" "),e("p",[n._v("ARMS Prometheus监控全面对接开源Prometheus生态，支持类型丰富的组件监控，提供多种开箱即用的预置监控大盘，且提供全面托管的Prometheus服务。")]),n._v(" "),e("p",[n._v("3.1.2预估费用")]),n._v(" "),e("p",[n._v("应用监控、Prometheus监控和前端监控三大子产品是独立分开付费的，这里以前端监控为例进行介绍：\n资源包价格\n名称\t规格\t价格\t折合计费单价\t有效期\n初级资源包\t200万页面上报次数\t¥ 420\t0.21元 / 1000前端数据上报次数\t6个月\n中级资源包\t1600万页面上报次数\t¥ 2,520\t0.158元 / 1000前端数据上报次数\t1年\n高级资源包\t12800万页面上报次数\t¥ 15,120\t0.118元 / 1000前端数据上报次数\t1年")]),n._v(" "),e("p",[n._v("预估费用详情\n收费规则：\n提供API上传免费额度，每日免费赠送50万次。\n超过50万上传次数的部分，按照原先十分之一的价格进行计费。")]),n._v(" "),e("p",[n._v("预估每日上报流量\n计算公式：每日上报流量 = PV +（API - 每天50万）* 0.1 + 自定义上报\n金额计算公式：（上报流量 / 资源包容量）* 资源包单价")]),n._v(" "),e("p",[n._v("计费流量（万）=（200+（2000 - 50）* 0.1 + 20）* 30 = 12,450\n金额（元） =（12,450 / 12800）* 15120 = 14,706\n3.1.3优缺点\n优点:\n除了bug监控这项基础功能外，额外提供了检测页面测速、外部服务调用监控（API）、页面健康度、统计埋点等功能，能更全面的监控前端应用。\n缺点:\n统计数据只能保留最近3个月，必须使用公有云的方式接入，无法保证数据安全。\n3.1.4合作伙伴\n3.2 Fundebug\n3.2.1简介\nFundebug提供全栈错误监控服务，通过邮件、钉钉、倍洽、Slack等第三方工具实时报警，提供全面的报错信息帮助用户快速分析问题，改进产品。通过记录程序异常的堆栈、网络请求错误、资源加载错误、并且记录用户行为利用独创的可视化重现技术来帮改进产品，提升产品体验。")]),n._v(" "),e("p",[n._v("3.2.2支持的开发语言\n目前支持JavaScript、微信小程序、微信小游戏、支付宝小程序、ReactNative、Java、Node.js等开发语言的错误监控。")]),n._v(" "),e("p",[n._v("3.2.3支持的功能\n支持邮件报警、错误智能聚合、控制台错误提醒、报错日报、错误评论、客服邮件支持、个性化定义错误过滤器、用户行为记录、Source Map支持、多种第三方报警、自定义报警规则、客服电话支持等功能。")]),n._v(" "),e("p",[n._v("3.2.4预估费用\n普通付费版\n套餐\t月付费用\t年付费用（8折）\t事件数/月\t成员\t项目\t数据保存\n套餐一\t¥ 127 /月\t¥ 1,219 /年\t15万\t10个\t20个\t30天\n套餐二\t¥ 287 /月\t¥ 2,755 /年\t45万\t20个\t50个\t30天\n套餐三\t¥ 687 /月\t¥ 6,595 /年\t150万\t40个\t100个\t30天\n套餐四\t¥ 2,047 /月\t¥ 19,651/年\t450万\t80个\t200个\t30天\n本地付费版\n套餐\t年付\n本地版使用Docker容器打包\t¥ 30万 /年起\n3.2.3优缺点\n优点:\n基于机器学习，聚合bug数据，避免重复报警，减少干扰。\n强大的控制台智能排序，能根据发生的时间、次数、用户数等维度对bug进行过滤筛选。\n团队协作方便，BUG即任务、支持任务分配及管理。\n缺点:\n根据天眼查显示，该企业最新一笔融资是2018年的天使轮融资，企业规模较小，稳定性欠缺。\n不支持开发语言C#的监控。\n私有化部署性价比不高。\n使用公有云的方式接入，无法保证数据的安全性。\n3.2.4合作伙伴")]),n._v(" "),e("p",[n._v("3.3 Sentry\n3.3.1简介\nSentry是一个国外的异常监控开源平台, 它分为客户端和服务端，客户端(目前客户端有JavaScript, Java, Python, PHP,C#, Ruby等多种语言)就嵌入在你的应用程序中间，程序出现异常就向服务端发送消息，服务端将消息记录到数据库中并提供一个web节目方便查看。Sentry由python编写，源码开放，性能卓越，易于扩展，能帮助开发人员实时监控和修复错误，快速迭代，提高效率。提升用户体验。\n3.3.2支持的开发语言")]),n._v(" "),e("p",[n._v("3.3.3支持的功能\n支持邮件报警、错误智能聚合、控制台错误提醒、报错日报、错误评论、个性化定义错误过滤器、用户行为记录、Source Map支持、多种第三方报警、自定义报警规则等功能。\n3.3.4预估费用\n私有化部署（使用python或者Docker进行部署），根据实际占用的资源进行估算\n3.3.5优缺点\n优点:\n项目开源免费，github的 star和fork数高，性能卓越，易于扩展。")]),n._v(" "),e("p",[n._v("支持大量语言，能满足当前的技术体系。\n支持私有化部署，能保证数据的安全性。\n对开发人员来说，可以快速部署，减少大量重复性劳动力。\n缺点:\n对服务性能的有一定损耗，需要占用3GB的运行内存。\n只提供bug监控功能，无法提供应用监控功能。\n需要额外的脚本来实现定期清理数据的功能。\n3.3.6合作伙伴\nSentry的合作伙伴有Disqus, Path, mozilla, Pinterest等公司\n3.4 Bugly\n3.4.1简介\n腾讯Bugly支持24小时Android崩溃异常监控，全面的Android崩溃捕获，Unity应用和游戏的崩溃监控，为您发现并上报所有崩溃信息。全面的Android ANR 分析，实时掌控Android ANR率，快速找到问题所在。支持全面的iOS卡顿分析，提升iOS应用的流畅度。\n3.4.2支持语言\n支持安卓、IOS、Android、Cocos2D和Unity3D这几种开发语言。\n3.4.3支持的功能\n支持邮件报警、错误智能聚合、控制台错误提醒等功能。\n3.4.4预估费用\n开源免费，仅适用于移动端\n3.4.5优缺点\n优点:\n开源免费，移动端监控的首选。\n缺点:\n支持的开发语言较少，只支持移动端的监控。\n3.4.5合作伙伴")]),n._v(" "),e("p",[n._v("3.5自研bug监控系统\n3.5.1 运行流程")]),n._v(" "),e("p",[n._v("3.5.2支持的功能\n支持邮件报警、错误智能聚合、控制台错误提醒、报错日报、错误评论、个性化定义错误过滤器、用户行为记录、Source Map支持、多种第三方报警、自定义报警规则等功能。\n3.5.3 涉及到的技术点\n探针SDK，需要支持的语言都要独立开发相应的探针SDK。\n数据清洗，使用elasticsearch暂存数据，不作为长期存储，然后经过数据清洗分析数据，提取聚合重复的数据，整理为更小的数据。\n数据持久化，将处理后的数据再存入在mysql，完成数据持久化，以便于后续进行分析处理\n数据可视化，使用Echart或者D3对数据进行可视化处理。\n监控告警，定义监控规则，通过邮件、钉钉等第三方工具实时报警按规则触发报警。\n3.5.4 预估费用\n私有化部署（使用python或者Docker进行部署），根据实际占用的资源进行估算\n3.4.5优缺点\n优点:\n能根据业务方向进行自定义研发\n支持私有化部署，能保证数据的安全性。\n拥有bug监控，性能监控，API请求监控，数据埋点，无圈选埋点等功能，是一款应用监控工具\n缺点:\n研发周期长，开发难度大，人力成本高。\n4.如何选择合适的Bug监控系统\n4.1当前的技术背景\n4.1.1技术体系\n前端：JavaScript（小程序，Vue，React），Java（Android），C#\n后端：Java\n4.1.2支持的部署条件\n支持通过docker进行私有化部署\n4.1.3 jenkins现有任务数\n一个jenkins任务通常表示一个需要进行监控的应用，这里统计目前线上有63个需要监控的应用")]),n._v(" "),e("p",[n._v("4.2 bug监控系统方案对比\nARMS前端\tFundebug\tSentry\tBugly\t自研监控\n支持语言\t1.JavaScript\n2.微信小程序\n3.钉钉小程序\n4.支付宝小程序\n5.Weex\t1.JavaScript\n2.微信小程序\n3.微信小游戏\n4.支付宝小程序\n5.ReactNative\n6.Java\n7.Node.js\t支持多种开发语言\t1.Android\n2.IOS\n3.Cocos2D\n4.Unity3D\n自定义\n预估费用\t假设30万的PV，则选用中级资源包¥ 2,520 /年\t1.普通版套餐三 ¥ 6,595 /年\n2.本地付费版¥ 30万/年起\t1.本地Docker部署根据实际占用的资源进行计算\t开源免费\t1.本地Docker部署根据实际占用的资源进行计算\n部署方式\t1.使用官方提供的公有云服务\t1.使用官方提供的公有云服务\n2.使用Dokcer进行私有化部署\t1.使用官方提供的公有云服务\n2.使用Dokcer进行私有化部署\t1.使用官方提供的公有云服务\t1.使用Dokcer进行私有化部署\n功能点\t1.通过邮件报警\n2.多种第三方报警\n3.自定义报警规则\n4.性能监控，5.API请求监控\n6.数据埋点\t1.邮件报警\n2.错误智能聚合\n3.控制台错误提醒\n4.报错日报、错误评论\n5.个性化定义错误过滤器\n6.用户行为记录\n7.多种第三方报警、\n8.自定义报警规则\t1.邮件报警\n2.错误智能聚合\n3.控制台错误提醒\n4.报错日报、错误评论\n5.个性化定义错误过滤器\n6.用户行为记录\n7.多种第三方报警、\n8.自定义报警规则\t1.邮件报警2.错误智能聚合\n3.控制台错误提醒\t1.邮件报警\n2.错误智能聚合\n3.控制台错误提醒\n4.报错日报、错误评论\n5.个性化定义错误过滤器\n6.用户行为记录\n7.多种第三方报警、\n8.自定义报警规则\n9.性能监控，10.API请求监控\n11.数据埋点\n安全性\t数据存放在公有云服务。不安全\t数据可存放在公有云服务也可存放在公司服务器，选择前者则不安全，选择后者则安全。\t数据存放在公司服务器，安全\t数据存放在公有云服务。不安全\t数据存放在公司服务器，安全")]),n._v(" "),e("p",[n._v("4.3结论\n4.3.1支持语言维度分析\nARMS前端方案方案在“支持语言”维度中的JavaScript和小程序领域能够较好的支持，同时也有ARMS App监控方案及ARMS JAVA应用监控方案能够对App和Java进行监控，但暂时没有对C#客户端提供相应的支持。\nFundebug方案能支持JavaScript，小程序，Java，但暂时没有对C#客户端提供相应的支持。\nsentry方案的在“支持语言”维度中的表现最好，支持的语言广泛。\nbugly方案由于支持的语言相对较少，无法完全支持我们现有技术栈，所以不推荐该方案。\n自研监控方案需要自行开发各种语言探针SDK。\n从支撑语言维度上来看，Bugly方案并不适合公司现有的技术体系。\n4.3.2预估费用维度\nARMS前端方案花费是¥ 2,520 /年，ARMS App监控方案目前是不计费公测，ARMS JAVA应用监控方案目需要额外计算计费，下面是计费方式。")]),n._v(" "),e("p",[n._v("Fundebug方案花费是 ¥ 6,595 /年。\nSentry方案需根据实际占用的资源进行计算价格。\n自研监控方案需根据实际占用的资源进行计算价格，由于自研项目开发周期长，需考虑人力成本。\n从预估费用维度上来看，Fundebug方案+Bugly方案相较ARMS前端方案+ARMS App监控方案+ARMS JAVA应用监控方案有价格优势。Fundebug方案+ Bugly方案和Sentry方案、自研监控方案的价格对比，需要深入评估后面两者的实际占用的资源，Sentry方案相较自研监控，部署后即可使用，无需开发和考虑人力成本。\n4.3.3部署方式维度\n从部署方式维度可以得知ARMS前端方案+ARMS App监控方案+ARMS JAVA应用监控方案，Bugly方案使用官方提供的公有云服务，Fundebug方案、Sentry方案、自研监控方案均可采用使用Dokcer进行私有化部署")]),n._v(" "),e("p",[n._v("从部署方式上来看，私有化部署可控程度更高，且能保证数据的安全性。\n4.3.3功能点维度\n从功能点维度可以得知每个方案的功能点大同小异，均能满足日常使用，部分方案在做好bug监控的同时，也具备其它方面的功能，如ARMS前端方案还包括性能监控，API请求监控，数据埋点，无圈选埋点等功能，自研监控方案也可以该方向发展。\n4.3.4安全性维度\n从安全性维度可以得知。Fundebug和Sentry、自研监控方案提供私有化部署方式能有效的保证数据安全性。\n4.3.5总结\n综合上面多个维度的分析，结合公司的实际情况，利用Sentry搭建Bug监控平台是目前最为合适的落地方案。")])])}),[],!1,null,null,null);t.default=r.exports}}]);